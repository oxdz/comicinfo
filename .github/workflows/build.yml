name: Build Cross Platform Executables

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    name: Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ linux, windows, darwin ]
        arch: [ amd64, arm64 ]
        exclude:
          - os: darwin
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Build executable
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          GOEXE: ${{ matrix.os == 'windows' && '.exe' || '' }}
        run: |
          mkdir -p dist
          go build -o dist/ccinf-${{ matrix.os }}-${{ matrix.arch }}/ccinf${{ matrix.os == 'windows' && '.exe' || '' }} \
            -ldflags="-s -w" \
            ./cmd/ccinf

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ccinf-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/ccinf-${{ matrix.os }}-${{ matrix.arch }}/ccinf${{ matrix.os == 'windows' && '.exe' || '' }}
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/*.zip
          merge-multiple: true

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.zip
          fail_on_unmatched_files: true